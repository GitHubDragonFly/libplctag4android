apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.abmodbusmaster"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_ARM_MODE=arm", "-DANDROID_STL=c++_shared", "-DANDROID=1"
                cppFlags ""
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "$rootDir/external_src/c/libplctag/CMakeLists.txt"
            version "3.10.2"
        }
    }

    tasks.whenTaskAdded { task ->
        if (task.name == "externalNativeBuild") {
            task.dependsOn checkoutLibplctagSource
        }
    }

    task checkoutLibplctagSource {
        def libplctagFolderPath = "$rootDir/external_src/c/libplctag"
        def libplctagFolder = new File(libplctagFolderPath)

        Process process = Runtime.getRuntime().exec("ping libplctag.github.io");
        int isReachable = process.waitFor();

        // if it does not exist, then clone the repo.
        if (!libplctagFolder.exists()) {
            // need to make the directory in which we will check out the C library.
            libplctagFolder.mkdirs()

            // get the C library.
            if (isReachable == 0){
                grgit.clone(dir: libplctagFolderPath, uri: "https://github.com/libplctag/libplctag", refToCheckout: "prerelease")
            }
        } else {
            // if it does exist, do a pull.
            if (isReachable == 0){
                def grgitInstance = grgit.open(dir: libplctagFolderPath)
                grgitInstance.pull()
            }
        }
    }
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.6.0@aar'

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
